#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX_OPS 100000
#define MAX_LEN 100000
typedef struct {
    char **data;
    int top;
} Stack;
void push(Stack *s, const char *str) {
    s->data[++(s->top)] = strdup(str);
}
char* pop(Stack *s) {
    if (s->top >= 0) {
        char *tmp = s->data[s->top--];
        return tmp;
    }
    return NULL;
}
int main() {
    int n;
    scanf("%d", &n);
    getchar();
    char text[MAX_LEN + 1] = "";
    Stack history;
    history.top = -1;
    history.data = malloc(n * sizeof(char*));
    for (int i = 0; i < n; i++) {
        int op;
        scanf("%d", &op);
        if (op == 1) {
            char s[MAX_LEN + 1];
            scanf("%s", s);
            push(&history, text);
            strcat(text, s);
        }
        else if (op == 2) {
            int k;
            scanf("%d", &k);
            push(&history, text);
            int len = strlen(text);
            if (k <= len) text[len - k] = '\0';
            else text[0] = '\0';
        }
        else if (op == 3) {
            int k;
            scanf("%d", &k);
            if (k > 0 && k <= strlen(text))
                printf("%c\n", text[k - 1]);
        }
        else if (op == 4) {
            char *prev = pop(&history);
            if (prev) {
                strcpy(text, prev);
                free(prev);
            }
        }
        getchar();
    }
    while (history.top >= 0) {
        free(history.data[history.top--]);
    }
    free(history.data);
    return 0;
}
